name: Remote Computers

on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Select Operating System'
        required: true
        type: choice
        options:
        - windows-latest
        - ubuntu-latest
        - macos-latest
        default: 'windows-latest'
      region:
        description: 'Ngrok Tunnel Region (e.g., us, eu, ap, au, sa, jp, in)'
        required: true
        type: string
        default: 'in'
      timeout:
        description: 'Session Timeout (minutes)'
        required: true
        type: number
        default: 3600
      username:
        description: 'Custom Username'
        required: true
        type: string
        default: 'Ashik'
      password:
        description: 'Custom Password'
        required: true
        type: string
        default: 'Ashik2006.pc'

jobs:
  rdp-session:
    runs-on: ${{ github.event.inputs.os }}
    timeout-minutes: ${{ github.event.inputs.timeout }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # --- Windows Setup ---
      - name: Configure RDP on Windows
        if: runner.os == 'Windows'
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: Create User on Windows
        if: runner.os == 'Windows'
        run: |
          $securePass = ConvertTo-SecureString "${{ github.event.inputs.password }}" -AsPlainText -Force
          New-LocalUser -Name "${{ github.event.inputs.username }}" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "${{ github.event.inputs.username }}"

      # --- Linux (Ubuntu) Setup ---
      - name: Configure Desktop and RDP on Ubuntu
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y ubuntu-desktop xrdp
          sudo systemctl enable --now xrdp
          sudo ufw allow 3389

      - name: Create User on Ubuntu
        if: runner.os == 'Linux'
        run: |
          sudo useradd -m -s /bin/bash ${{ github.event.inputs.username }}
          echo "${{ github.event.inputs.username }}:${{ github.event.inputs.password }}" | sudo chpasswd
          sudo adduser ${{ github.event.inputs.username }} sudo

      # --- Ngrok Tunneling (Cross-Platform) ---
      - name: Setup Ngrok Tunnel
        run: |
          # Download and start ngrok for the specific OS
          if [ "$RUNNER_OS" == "Windows" ]; then
            Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile "$env:TEMP\ngrok.zip"
            Expand-Archive -Path "$env:TEMP\ngrok.zip" -DestinationPath "$env:TEMP\ngrok" -Force
            Start-Process -FilePath "$env:TEMP\ngrok\ngrok.exe" -ArgumentList "tcp", "3389", "--authtoken", "${{ secrets.NGROK_AUTH_TOKEN }}", "--region", "${{ github.event.inputs.region }}" -WindowStyle Hidden
          elif [ "$RUNNER_OS" == "Linux" ]; then
            curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz | sudo tar -C /usr/local/bin -xz
            ngrok tcp 3389 --authtoken "${{ secrets.NGROK_AUTH_TOKEN }}" --region "${{ github.event.inputs.region }}" &> /dev/null &
          fi
          
          sleep 8
          
          # Get the public URL and set environment variables
          $tunnelInfo = (Invoke-WebRequest -Uri "http://localhost:4040/api/tunnels" -UseBasicParsing).Content | ConvertFrom-Json
          $publicUrl = $tunnelInfo.tunnels[0].public_url
          $rdpAddress = $publicUrl -replace "tcp://", "" -replace ":\d+", ""
          $rdpPort = $publicUrl -replace ".*:", ""
          
          echo "RDP_ADDRESS=$rdpAddress" >> $env:GITHUB_ENV
          echo "RDP_PORT=$rdpPort" >> $env:GITHUB_ENV
          Write-Host "Ngrok Tunnel Established: $publicUrl"
        shell: pwsh

      # --- Display Connection Info ---
      - name: Display Connection Details
        run: |
          echo "ðŸŽ¯ RDP CONNECTION DETAILS ðŸŽ¯"
          echo "=========================================="
          echo "OS: ${{ github.event.inputs.os }}"
          echo "Address: ${{ env.RDP_ADDRESS }}"
          echo "Port: ${{ env.RDP_PORT }}"
          echo "Username: ${{ github.event.inputs.username }}"
          echo "Password: ${{ github.event.inputs.password }}"
          echo "=========================================="
          echo "In your Remote Desktop client, use:"
          echo "Computer: ${{ env.RDP_ADDRESS }}:${{ env.RDP_PORT }}"
          echo "=========================================="
        shell: bash
        
      # --- Maintain Connection ---
      - name: Keep Workflow Alive
        run: |
          while ($true) {
              Write-Host "[$(Get-Date)] RDP Ready - Connect to: ${{ env.RDP_ADDRESS }}:${{ env.RDP_PORT }}"
              Start-Sleep -Seconds 60
          }
        shell: pwsh